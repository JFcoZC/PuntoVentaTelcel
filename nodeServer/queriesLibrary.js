/*
*José Francisco Zerón Cabrera
*
*Library used for manage connections and queries to the DB
*
*/

//Module that deals with the permissions to access to the filesystem
var fs = require('fs');
//Modlue to connect with postgresql
const {Client,Pool} = require('pg');

//GLOBAL VARIABLES FOR SQL SERVER
var ipSQLServer = '';
var portNumberSQLServer = 0;
var databaseSQLServer = '';
var userSQLServer = '';
var pswdSQLServer = '';

//---------------------------------
/*
*Set the values (ip and port number) where the server with the databse that contains
*the tables (ROL,USER,PERMISSION) responds to queries
*/
exports.setDataDBUsersAndPermissions = function(ip,socket,database,user,pass)
{
	ipSQLServer = ip;
	portNumberSQLServer = socket;
	databaseSQLServer = database;
	userSQLServer = user;
	pswdSQLServer = pass;

}//End setDataDBUsersAndPermissions function
//--------------------------------
/*
*Function that generates a new client given the actual values for connection to DB
*that stores tables USERS, PERMISSION and ROL
*/
function generateClientDBUsrPer()
{
	return new Client({
		user : userSQLServer,
		host : ipSQLServer,
		database : databaseSQLServer,
		password: pswdSQLServer,
		port : portNumberSQLServer,
	});
}
//--------------------------------
exports.createDatabaseFile = function()
{

	sqlData = 'create table IF NOT EXISTS ARTICULO( id SERIAL PRIMARY KEY, nombre varchar(30), categoria varchar(30),\n'+
              'descripcion varchar(50), unidades INTEGER, precio FLOAT,\n'+
              'marca varchar(20), modelo varchar(20) );\n'+
              
              'create table IF NOT EXISTS VENTAS( id SERIAL PRIMARY KEY,'+
			  'idArticulo INTEGER, unidades INTEGER, precio FLOAT, fecha varchar(15)'+
			  'hora varchar(15) );\n';	  

	//Create a file with the content, and if already exists it overwrites it
	fs.writeFileSync('database.sql', sqlData);

}//End function createDatabaseFile
//---------------------------------
/*
*Connect to Postgres DB according to global variables and execute the file
*previously generated by function createDatabaseFile()
*/
exports.uploadDatabaseFile = async function(archivosql)
{
	//Convertir .sql a cadena
	var sqlFile = fs.readFileSync(archivosql).toString();
	
	//Generate client for connection
	const pg = generateClientDBUsrPer();

	pg.connect(function(err,client){
		if(err)
		{
			console.log(err);
		}//Fin if
		else
		{
			console.log('Connected to execute .sql File : '+archivosql);

			//Ejecutar archivo .sql como query
			client.query(sqlFile, function(err,result){
				//done();
				if(err)
				{
					console.log("error", err);
					//Finalizar con errror
					//process.exit(1);

				}//FIn if

				console.log('Datos guardados!');
				
				//Cerrar conexión cliente
				client.end();

			});//End client.query	
			
		}//End else	
	});//End conexion

}//End function uploadDatabaseFile
//---------------------------------
/*
*Insert new Article
*/
exports.insertNewArt = function(nombre,categoria,desc,unidades,marca,modelo,precio)
{
	//Generate client for connection
	const pg = generateClientDBUsrPer();

	return new Promise(
		function (resolve,reject)
		{

			pg.connect(async function(err,client){

				if(err)
				{
					console.log("Error al conectarse a servidor para insertar nuevo Articulo: ");
					console.log(err);
				}//Fin if error
				else
				{
					//----
					console.log("-----+DATOS PARA INSERT+-----");
					console.log(nombre);
					console.log(categoria);
					console.log(desc);
					console.log(unidades);
					console.log(marca);
					console.log(modelo);
					console.log(precio);
					console.log("-----+FIN DATOS PARA INSERT+-----")
					//----

					client.query("INSERT INTO ARTICULO (id,nombre,categoria,descripcion,unidades,precio,marca,modelo)"
								+" VALUES (DEFAULT,'"+nombre+"','"+categoria+"','"+desc+"',"+unidades+","+precio+",'"+marca+"','"+modelo+"') RETURNING id;",
								async function(err,result){

									if(err)
									{
										console.log("Error insertando nuevo articulo", err);
										//Kill the server
										process.exit(1);

									}//End if error 2

									var artid = result.rows[0].id;
									console.log('Nuevo articulo insertado exitosamente con id: '+docid);
									//Return id of doc inserted
									resolve(artid);
						
									//Cerrar conexión cliente
									client.end();
								});//Fin funcion query

				}//Fin else error

			});//Fin connect


		}//Fin funcion anonima
	);//Fin objeto Promise

}//End function insertNewArt
//---------------------------------
/**
 * Answer set with all the existent articles in table Articles
 */
exports.getAllArticles = function ()
{
	//Generate client for connection
	const pg = generateClientDBUsrPer();

	return new Promise(
		function (resolve,reject)
		{

			pg.connect(async function(err,client){

				if(err)
				{
					console.log("Error al conectarse a servidor para consulta de todos los Articulos: ");
					console.log(err);
				}//Fin if error
				else
				{
					
					client.query("SELECT * FROM ARTICULO;",
								async function(err,result){

									if(err)
									{
										console.log("Error al buscar TODOS LOS ARTIUCLOS", err);
										//Kill the server
										//process.exit(1);

									}//End if error 2

									console.log('Result query ALL ARTICULOS:');

									//Found a match
									if(result.rowCount > 0)
									{
										console.log('At least one article found!');

									}//Fin if	

									resolve(result.rows);

									//Cerrar conexión cliente
									client.end();

								});//Fin funcion query

				}//Fin else error

			});//Fin connect

		}//Fin funcion anonima

	);//Fin objeto Promise

}//End function getAllArticles
//---------------------------------
/**
 * Delete from all the tables registers related with the article that is going
 * to be deleted
 */
exports.deleteArticleAllTables = function(idFile)
{
	//Generate client for connection
	const pg = generateClientDBUsrPer();

	return new Promise(
		function (resolve,reject)
		{

			pg.connect(async function(err,client){

				if(err)
				{
					console.log("Error al conectarse a servidor para eliminar articulo de todas las tablas: ");
					console.log(err);
				}//Fin if error
				else
				{
					//----
					console.log("-----+DATOS PARA ELIMINAR ARTICULO+-----");
					console.log(idFile);
					console.log("-----+FIN DATOS PARA ELIMINAR ARTICULO+-----")
					//----

					client.query("DELETE FROM ARTICULO WHERE id = "
								+""+idFile+";",
								async function(err,result){

									if(err)
									{
										console.log("Error eliminando Articulo de todas las tablas: ", err);
										//Kill the server
										process.exit(1);

									}//End if error 2
									console.log('Articulo eliminado exitosamente de todas las tablas!');
									//Return 1 mening that the insertion was oK
									resolve(1);

									//Cerrar conexión cliente
									client.end();

								});//Fin funcion query

				}//Fin else error

			});//Fin connect


		}//Fin funcion anonima
	);//Fin objeto Promise

}//End function deleteDoc
//------------------------------------------
/*
*Modify all the data of existing article, except the information related with 
*the file
*/
exports.modifyArt = function(id,nombre,categoria,desc,unidades,marca,modelo,precio)
{
	//Generate client for connection
	const pg = generateClientDBUsrPer();

	return new Promise(
		function (resolve,reject)
		{

			pg.connect(async function(err,client){

				if(err)
				{
					console.log("Error al conectarse a servidor para modificar articulo: ");
					console.log(err);
				}//Fin if error
				else
				{
					//----
					console.log("-----+DATOS PARA MODIFY ARTICLE INFO+-----");
					console.log(id);
					console.log(nombre);
					console.log(categoria);
					console.log(desc);
					console.log(unidades);
					console.log(marca);
					console.log(modelo);
					console.log(precio);
					console.log("-----+FIN DATOS PARA MODIFY ARTICLE INFO+-----")
					//----

					client.query("UPDATE ARTICULO SET "
								+" nombre = '"+nombre+"', categoria = '"+categoria+"', descripcion = '"+desc+"', unidades = "+unidades+", precio = "+precio+", marca = '"+marca+"', modelo = '"+modelo+"' WHERE id = "+id+";",
								async function(err,result){

									if(err)
									{
										console.log("Error modificando INFO DE articulo", err);
										//Kill the server
										//process.exit(1);

									}//End if error 2

									console.log('Modificación exitosa de INFO DE articulo con id: '+id);
									//Return id of doc inserted
									resolve(id);
						
									//Cerrar conexión cliente
									client.end();
								});//Fin funcion query

				}//Fin else error

			});//Fin connect


		}//Fin funcion anonima
	);//Fin objeto Promise

}//End function modifyArt
//---------------------------------
/*
*Read content of guiconfig.txt
*/
exports.readGuiConfigFile = function()
{
	//Convertir .sql a cadena
	var txtFile = fs.readFileSync('guiconfig.txt','utf8').toString();
	var configValues = txtFile.split('|');

	return configValues;

}//End function uploadDatabaseFile
//---------------------------------
exports.writeGuiConfigFile = function(mainTitle,latText,clrmt,clrtl,clrline)
{

	var data = mainTitle+'|'+latText+'|'+clrmt+'|'+clrtl+'|'+clrline;	  

	//Create a file with the content, and if already exists it overwrites it
	fs.writeFileSync('guiconfig.txt', data);

}//End function createDatabaseFile
//---------------------------------